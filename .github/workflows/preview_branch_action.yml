name: Fetch Cloudflare Pages Deployment Status

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches-ignore:
      - main

jobs:
  fetch-preview-url:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Fetch the latest deployment status from Cloudflare Pages
        run: |
          # Fetch the latest deployment status
          DEPLOYMENT_STATUS=$(curl -s -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
            "https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/pages/projects/$CLOUDFLARE_PROJECT_NAME/deployments")
          
          # Log the deployment status for debugging
          echo "Deployment Status: $DEPLOYMENT_STATUS"

          # Parse the latest preview URL for the "preview" environment
          PREVIEW_URL=$(echo $DEPLOYMENT_STATUS | jq -r '.result[] | select(.environment == "preview") | .url' | head -n 1)

          # Check if PREVIEW_URL is valid
          if [[ -z "$PREVIEW_URL" || "$PREVIEW_URL" == "null" ]]; then
            echo "Error: No valid preview URL found in the API response."
            exit 1
          fi

          # Set the preview URL as an output
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV
          
          # Optionally output it to the console for confirmation
          echo "Preview URL: $PREVIEW_URL"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_PROJECT_NAME: "auto-resume"

      - name: Use Preview URL
        run: |
          echo "Using Preview URL: $PREVIEW_URL"

      - name: Generate PDF (Example Step)
        run: |
          # Example usage of the preview URL for generating a PDF
          curl -X POST "https://api.pdfservice.com/generate" \
            -H "Content-Type: application/json" \
            -d '{
              "url": "'"$PREVIEW_URL"'",
              "options": {
                "papersize": "Letter",
                "orientation": "Portrait"
              }
            }' -o output.pdf
        env:
          PDF_API_KEY: ${{ secrets.PDF_API_KEY }}
