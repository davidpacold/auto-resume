name: Generate PDFs and Deploy to Cloudflare Pages Preview Branch

on:
  push:
    branches:
      - content-update  # Run only on the content-update branch
  workflow_dispatch:  # Allow manual trigger if needed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo content
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.110.0"
          extended: true

      - name: Build Website
        run: hugo --minify

      - name: Fetch Cloudflare Pages Preview URL
        run: |
          # Fetch the latest deployment status
          DEPLOYMENT_STATUS=$(curl -s -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
            "https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/pages/projects/$CLOUDFLARE_PROJECT_NAME/deployments")
          
          # Log the deployment status for debugging
          echo "Deployment Status: $DEPLOYMENT_STATUS"

          # Parse the latest preview URL for the "preview" environment
          PREVIEW_URL=$(echo $DEPLOYMENT_STATUS | jq -r '.result[] | select(.environment == "preview") | .url' | head -n 1)

          # Check if PREVIEW_URL is valid
          if [[ -z "$PREVIEW_URL" || "$PREVIEW_URL" == "null" ]]; then
            echo "Error: No valid preview URL found in the API response."
            exit 1
          fi

          # Set the preview URL as an output
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV
          
          # Optionally output it to the console for confirmation
          echo "Preview URL: $PREVIEW_URL"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_PROJECT_NAME: "auto-resume"

      - name: Wait for Deployment to be Ready
        run: sleep 120  # Add a 2-minute pause to ensure deployment completion

      - name: Generate PDFs
        env:
          PDFCO_KEY: ${{ secrets.PDFCO_KEY }}
          RESUME_URL: $PREVIEW_URL
        run: |
          echo "PREVIEW_URL: $PREVIEW_URL"
          echo "RESUME_URL: $RESUME_URL"
          mkdir static_pdf
          python get_pdf.py
          cp static_pdf/*.pdf ./static/
          cp static_pdf/*.pdf ./public/

          
      - name: Commit Files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add static
          git diff-index --quiet HEAD || (git commit -a -m "Updated PDFs" --allow-empty)
          
      - name: Push Changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: content-update
